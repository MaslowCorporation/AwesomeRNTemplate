{
  "question": "Create a JS function FixAppDependencies().\n\nthis function replaces every instance of\n\njson.extraDependencies.androidMavenRepos\n\nwith\n\njson?.extraDependencies?.androidMavenRepos?\n\nin the node_modules\\expo-modules-autolinking\\scripts\\android\\autolinking_implementation.gradle file, in the cwd.\n\nwrite this function in a way so I can easily add other fixes later",
  "questionPath": "question.txt",
  "answer": {
    "codePart": "const fs = require('fs');\nconst path = require('path');\n\nfunction FixAppDependencies() {\n  const cwd = process.cwd();\n  const gradleFilePath = path.join(cwd, 'node_modules', 'expo-modules-autolinking', 'scripts', 'android', 'autolinking_implementation.gradle');\n    \n  fs.readFile(gradleFilePath, 'utf8', (error, data) => {\n    if (error) {\n      console.log(`Error reading file: ${error}`);\n      return;\n    }\n    \n    const updatedData = data.replace(/json.extraDependencies.androidMavenRepos/g, 'json?.extraDependencies?.androidMavenRepos?');\n    \n    fs.writeFile(gradleFilePath, updatedData, 'utf8', (error) => {\n      if (error) {\n        console.log(`Error writing file: ${error}`);\n        return;\n      }\n      console.log('Fix applied successfully.');\n    });\n  });\n}\n\n// Example usage\nFixAppDependencies();\n",
    "answer": "Here's the implementation of the FixAppDependencies() function that replaces every instance of json.extraDependencies.androidMavenRepos with json?.extraDependencies?.androidMavenRepos? in the specified gradle file:\n\n```javascript\nconst fs = require('fs');\nconst path = require('path');\n\nfunction FixAppDependencies() {\n  const cwd = process.cwd();\n  const gradleFilePath = path.join(cwd, 'node_modules', 'expo-modules-autolinking', 'scripts', 'android', 'autolinking_implementation.gradle');\n    \n  fs.readFile(gradleFilePath, 'utf8', (error, data) => {\n    if (error) {\n      console.log(`Error reading file: ${error}`);\n      return;\n    }\n    \n    const updatedData = data.replace(/json.extraDependencies.androidMavenRepos/g, 'json?.extraDependencies?.androidMavenRepos?');\n    \n    fs.writeFile(gradleFilePath, updatedData, 'utf8', (error) => {\n      if (error) {\n        console.log(`Error writing file: ${error}`);\n        return;\n      }\n      console.log('Fix applied successfully.');\n    });\n  });\n}\n\n// Example usage\nFixAppDependencies();\n```\n\nYou can easily add other fixes by modifying the `FixAppDependencies()` function according to your requirements."
  },
  "codeFilePath": "FixAppDependencies.js"
}